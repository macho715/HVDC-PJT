name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Mondays at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip --no-cache-dir
          pip install bandit safety semgrep --no-cache-dir

      - name: Run Bandit security scan
        run: |
          if [ -d "src/" ]; then
            bandit -r src/ -f json -o bandit-report.json || true
            bandit -r src/ -f txt || true
          else
            echo "src/ directory not found, skipping Bandit scan"
            echo "{}" > bandit-report.json
          fi

      - name: Run Safety dependency check
        run: |
          safety check --json --output safety-report.json || true
          safety check || true

      - name: Run Semgrep SAST scan
        run: |
          if [ -d "src/" ]; then
            semgrep --config=auto src/ --json --output=semgrep-report.json || true
            semgrep --config=auto src/ || true
          else
            echo "src/ directory not found, skipping Semgrep scan"
            echo "{}" > semgrep-report.json
          fi

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
            semgrep-report.json

      - name: Comment PR with security results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            // Read security reports
            let banditResults = '';
            let safetyResults = '';
            
            try {
              const banditData = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
              banditResults = `**Bandit Security Scan Results:**\n- High: ${banditData.results.filter(r => r.issue_severity === 'HIGH').length}\n- Medium: ${banditData.results.filter(r => r.issue_severity === 'MEDIUM').length}\n- Low: ${banditData.results.filter(r => r.issue_severity === 'LOW').length}`;
            } catch (e) {
              banditResults = 'Bandit scan completed with issues.';
            }
            
            try {
              const safetyData = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
              safetyResults = `**Safety Dependency Check:**\n- Vulnerabilities found: ${safetyData.length}`;
            } catch (e) {
              safetyResults = 'Safety check completed.';
            }
            
            const comment = `## ðŸ”’ Security Scan Results\n\n${banditResults}\n\n${safetyResults}\n\nPlease review the security reports and address any high-severity issues before merging.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
